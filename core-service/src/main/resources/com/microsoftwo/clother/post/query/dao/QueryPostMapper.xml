<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.microsoftwo.clother.post.query.dao.QueryPostMapper">

    <resultMap id="getPostByIdResultMap" type="com.microsoftwo.clother.post.query.dto.PostDTO">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="content" column="content"/>
        <result property="createdAt" column="created_at"/>
        <result property="likeCount" column="like_count"/>
        <result property="commentCount" column="comment_count"/>
        <result property="imageUrls" column="image_urls"/>
        <result property="lookTags" column="look_tags"/>
    </resultMap>
    <select id="getPostById" resultMap="getPostByIdResultMap" parameterType="_int">
        SELECT
               A.ID
             , A.USER_ID
             , A.CONTENT
             , A.CREATED_AT
             , A.LIKE_COUNT
             , A.COMMENT_COUNT
             , GROUP_CONCAT(DISTINCT B.IMAGE_URL ORDER BY B.ORDER ASC) AS IMAGE_URLS
             , GROUP_CONCAT(DISTINCT D.NAME ORDER BY D.ID ASC) AS LOOK_TAGS
          FROM POST A
          LEFT JOIN POST_IMAGE B ON A.ID = B.POST_ID
          LEFT JOIN TAG C ON A.ID = C.POST_ID
          LEFT JOIN LOOK_TAG D ON C.LOOK_TAG_ID = D.ID
         WHERE A.ID = #{postId}
         GROUP BY
               A.ID
             , A.USER_ID
             , A.CONTENT
             , A.CREATED_AT
             , A.LIKE_COUNT
             , A.COMMENT_COUNT
    </select>

    <resultMap id="getHairTagByPostIdResultMap" type="com.microsoftwo.clother.post.query.dto.HairTagDTO">
        <id property="id" column="id"/>
        <result property="link" column="hair_tag_link"/>
        <result property="name" column="hair_tag_name"/>
        <result property="categoryId" column="hair_tag_category_id"/>
        <result property="hairTagPositionX" column="hair_tag_position_x"/>
        <result property="hairTagPositionY" column="hair_tag_position_y"/>
    </resultMap>
    <select id="getHairTagByPostId" resultMap="getHairTagByPostIdResultMap" parameterType="_int">
        SELECT
               A.POSITION_X AS HAIR_TAG_POSITION_X
             , A.POSITION_Y AS HAIR_TAG_POSITION_Y
             , B.ID AS id
             , B.LINK AS HAIR_TAG_LINK
             , B.NAME AS HAIR_TAG_NAME
             , B.CATEGORY_ID AS HAIR_TAG_CATEGORY_ID
          FROM TAG A
          JOIN HAIR_TAG B ON A.HAIR_TAG_ID = B.ID
         WHERE A.POST_ID = #{postId}
    </select>

    <resultMap id="getProductTagByPostIdResultMap" type="com.microsoftwo.clother.post.query.dto.ProductTagDTO">
        <id property="id" column="id"/>
        <result property="productId" column="product_id"/>
        <result property="productTagPositionX" column="product_tag_position_x"/>
        <result property="productTagPositionY" column="product_tag_position_y"/>
    </resultMap>
    <select id="getProductTagByPostId" resultMap="getProductTagByPostIdResultMap" parameterType="_int">
        SELECT
               ID
             , PRODUCT_ID
             , POSITION_X AS PRODUCT_TAG_POSITION_X
             , POSITION_Y AS PRODUCT_TAG_POSITION_Y
          FROM tag
         WHERE POST_ID = #{postId} AND PRODUCT_ID IS NOT NULL;
    </select>

    <!-- select feed resultMap -->
    <resultMap id="selectFeedResultMap" type="com.microsoftwo.clother.post.query.dto.PostForFeedDTO">
        <id property="id" column="id"/>
        <result property="likeCount" column="like_count"/>
        <result property="commentCount" column="comment_count"/>
        <result property="thumbnailUrl" column="thumbnail_url"/>
    </resultMap>

    <!-- 태그 필터 조건 분리 -->
    <sql id="feedTagFilter">
        <if test="(lookTagIds != null and lookTagIds.size() > 0) or (categoryIds != null and categoryIds.size() > 0)">
            HAVING
            <!-- 첫 번째 AND 제거 -->
            <trim prefixOverrides="AND">
                <if test="lookTagIds != null and lookTagIds.size() > 0">
                    (
                    <foreach collection="lookTagIds" item="tagId" separator=" OR ">
                        FIND_IN_SET(#{tagId}, look_tag_ids)
                    </foreach>
                    )
                </if>
                <if test="categoryIds != null and categoryIds.size() > 0">
                    <if test="lookTagIds != null and lookTagIds.size() > 0">
                        AND
                    </if>
                    (
                    <foreach collection="categoryIds" item="catId" separator=" OR ">
                        FIND_IN_SET(#{catId}, category_ids)
                    </foreach>
                    )
                </if>
            </trim>
        </if>
    </sql>

    <!-- select feed -->
    <select id="selectFeed" resultMap="selectFeedResultMap" parameterType="com.microsoftwo.clother.post.query.dto.RequestFeedDTO">
        SELECT
               p.id
             , p.like_count
             , p.comment_count
             , thumb.image_url AS thumbnail_url
             , GROUP_CONCAT(DISTINCT plt.look_tag_id) AS look_tag_ids
             , GROUP_CONCAT(DISTINCT t.category_id) AS category_ids
          FROM post p
          JOIN user u ON p.user_id = u.id
          LEFT JOIN post_image thumb ON thumb.post_id = p.id AND thumb.`order` = 1
          LEFT JOIN post_look_tag plt ON p.id = plt.post_id
          LEFT JOIN tag t ON p.id = t.post_id
        <where>
            p.is_deleted = FALSE
            <if test="minHeight != null">
                AND u.height &gt;= #{minHeight}
            </if>
            <if test="maxHeight != null">
                AND u.height &lt;= #{maxHeight}
            </if>
            <if test="minWeight != null">
                AND u.weight &gt;= #{minWeight}
            </if>
            <if test="maxWeight != null">
                AND u.weight &lt;= #{maxWeight}
            </if>
            <if test="lastPostId != null and sort == 'latest'">
                AND p.id &lt; #{lastPostId}
            </if>
            <if test="lastPostId != null and sort == 'likes'">
                AND (
                    p.like_count &lt; (
                        SELECT like_count
                          FROM post
                         WHERE id = #{lastPostId}
                    )
                    OR (
                        p.like_count = (
                            SELECT like_count
                              FROM post
                             WHERE id = #{lastPostId}
                        )
                        AND p.id &lt; #{lastPostId}
                    )
                )
            </if>
        </where>
        GROUP BY p.id
        <include refid="feedTagFilter"/>
        <choose>
            <when test="sort == 'likes'">
                ORDER BY p.like_count DESC, p.created_at DESC
            </when>
            <otherwise>
                ORDER BY p.created_at DESC
            </otherwise>
        </choose>
        LIMIT 20
    </select>
</mapper>
